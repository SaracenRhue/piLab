#!/bin/bash

HOSTAPD_CONF="/etc/hostapd/hostapd.conf"

show_help() {
    echo "Usage: lab {command} [options]"
    echo ""
    echo "Commands:"
    echo "  wifi {command}                              - Control the WiFi access point."
    echo "    start                                    - Start the WiFi access point."
    echo "    stop                                     - Stop the WiFi access point."
    echo "    restart                                  - Restart the WiFi access point."
    echo "    hide                                     - Hide the WiFi network SSID."
    echo "    show                                     - Show the WiFi network SSID."
    echo "    24ghz                                    - Switch to 2.4 GHz frequency band."
    echo "    5ghz                                     - Switch to 5 GHz frequency band."
    echo "    show-ssid                                - Show the current WiFi SSID."
    echo "    change-ssid [new-ssid]                   - Change the WiFi SSID."
    echo "    show-password                            - Show the current WiFi password."
    echo "    change-password [new-password]           - Change the WiFi password."
    echo "    status                                   - Show the status of the WiFi network, SSID, and frequency."
    echo "  clean                                      - Perform system cleanup and Docker maintenance."
    echo "  update                                     - Update system packages and Docker containers."
    echo "  help, -h, --help                           - Show this help message."
    echo ""
    echo "Examples:"
    echo "  lab wifi start                           - Start the WiFi access point."
    echo "  lab wifi 5ghz                            - Switch to 5 GHz band."
    echo "  lab wifi change-ssid                     - Change the WiFi SSID."
    echo "  lab wifi change-password                 - Change the WiFi password."
    echo "  lab clean                                - Perform system cleanup and Docker maintenance."
    echo "  lab update                               - Update system packages and Docker containers."
}



wifi_control() {
    case "$1" in
        start)
            sudo systemctl start hostapd
            echo "WiFi started."
            ;;
        stop)
            sudo systemctl stop hostapd
            echo "WiFi stopped."
            ;;
        restart)
            sudo systemctl restart hostapd
            echo "WiFi restarted."
            ;;
        hide)
            sudo sed -i '/ignore_broadcast_ssid=/c\ignore_broadcast_ssid=1' "$HOSTAPD_CONF"
            sudo systemctl restart hostapd
            echo "WiFi is now hidden."
            ;;
        show)
            sudo sed -i '/ignore_broadcast_ssid=/c\ignore_broadcast_ssid=0' "$HOSTAPD_CONF"
            sudo systemctl restart hostapd
            echo "WiFi is now visible."
            ;;
        24ghz)
            sudo sed -i '/hw_mode=/c\hw_mode=g' "$HOSTAPD_CONF"
            sudo sed -i '/channel=/c\channel=6' "$HOSTAPD_CONF"
            sudo systemctl restart hostapd
            echo "Switched to 2.4 GHz."
            ;;
        5ghz)
            sudo sed -i '/hw_mode=/c\hw_mode=a' "$HOSTAPD_CONF"
            sudo sed -i '/channel=/c\channel=36' "$HOSTAPD_CONF"
            sudo systemctl restart hostapd
            echo "Switched to 5 GHz."
            ;;
        show-ssid|show-name)
            echo "Current SSID:"
            grep "^ssid=" "$HOSTAPD_CONF" | cut -d'=' -f2
            ;;
        change-ssid|change-name)
            echo "Enter new WiFi SSID:"
            read new_ssid
            if [ -z "$new_ssid" ]; then
                echo "No SSID entered. Operation cancelled."
                exit 1
            fi
            sudo sed -i "s/^ssid=.*/ssid=$new_ssid/" "$HOSTAPD_CONF"
            sudo systemctl restart hostapd
            echo "SSID changed to $new_ssid."
            ;;
        show-password|show-pwd)
            echo "Current WiFi Password:"
            grep "^wpa_passphrase=" "$HOSTAPD_CONF" | cut -d'=' -f2
            ;;
        change-password|change-pwd)
            echo "Enter new WiFi password:"
            read -s new_pwd
            echo
            echo "Confirm new WiFi password:"
            read -s confirm_pwd
            echo
            if [ "$new_pwd" != "$confirm_pwd" ]; then
                echo "Passwords do not match. Operation cancelled."
                exit 1
            fi
            if [ -z "$new_pwd" ]; then
                echo "No password entered. Operation cancelled."
                exit 1
            fi
            sudo sed -i "s/^wpa_passphrase=.*/wpa_passphrase=$new_pwd/" "$HOSTAPD_CONF"
            sudo systemctl restart hostapd
            echo "Password changed."
            ;;
        status)
            echo "WiFi Status:"
            sudo systemctl is-active --quiet hostapd && echo "Running" || echo "Stopped"
            echo "Current SSID:"
            grep "^ssid=" "$HOSTAPD_CONF" | cut -d'=' -f2
            hw_mode=$(grep "^hw_mode=" "$HOSTAPD_CONF" | cut -d'=' -f2)
            if [ "$hw_mode" = "g" ]; then
                echo "Frequency: 2.4 GHz"
            elif [ "$hw_mode" = "a" ]; then
                echo "Frequency: 5 GHz"
            else
                echo "Frequency: Unknown"
            fi
            ;;
        *)
            show_help
            exit 1
    esac
}

system_clean() {
    echo "Performing system cleanup..."

    # Clean up temporary files
    sudo rm -rf /tmp/* && sudo rm -rf /var/tmp/*
    # Clean package cache
    sudo nala clean
    # Remove unused packages
    sudo nala autoremove -y

    echo "System cleanup complete."
}

system_update() {
    echo "Updating system packages..."
    sudo nala update && sudo nala upgrade -y && sudo nala autoremove -y
    # update lab script
    echo "Updating lab script..."
    wget -q https://raw.githubusercontent.com/SaracenRhue/piLab/main/config/lab && sudo mv lab /usr/local/bin/lab && sudo chmod +x /usr/local/bin/lab && source .zshrc
    
    echo "System update complete."
}

install() {
    case "$1" in
        mongo|mongodb)
            curl -fsSL https://raw.githubusercontent.com/SaracenRhue/piLab/main/containers/mongodb.sh | sh
            ;;
        minecraft|minecraft-server)
            curl -fsSL https://raw.githubusercontent.com/SaracenRhue/piLab/main/containers/minecraft_server.sh | sh
            ;;
        list|help)
            echo "Availible Containers:"
            echo "mongodb, minecraft-server"
            ;;
        *) 
        sudo nala install -y "$1"
        ;;
    esac
}

remove() {
    sudo nala remove -y "$1"
}

lab_config_dialog() {
    while true; do
        EXEC_CHOICE=$(dialog --clear --backtitle "Lab Configuration" \
            --title "Main Menu" \
            --menu "Choose an operation:" 15 50 6 \
            "1" "Manage WiFi" \
            "2" "System Cleanup" \
            "3" "System Update" \
            "4" "Install Software/Containers" \
            "5" "Remove Software" \
            "6" "Exit" \
            3>&1 1>&2 2>&3)

        case $EXEC_CHOICE in
            1)
                WIFI_CHOICE=$(dialog --clear --backtitle "WiFi Management" \
                    --title "WiFi Menu" \
                    --menu "Choose an operation:" 15 50 8 \
                    "start" "Start WiFi" \
                    "stop" "Stop WiFi" \
                    "restart" "Restart WiFi" \
                    "hide" "Hide SSID" \
                    "show" "Show SSID" \
                    "24ghz" "Switch to 2.4 GHz" \
                    "5ghz" "Switch to 5 GHz" \
                    "status" "Show WiFi Status" \
                    3>&1 1>&2 2>&3)
                
                [ -n "$WIFI_CHOICE" ] && wifi_control $WIFI_CHOICE
                ;;
            2)
                system_clean
                ;;
            3)
                system_update
                ;;
            4)
                INSTALL_CHOICE=$(dialog --clear --backtitle "Install Software/Containers" \
                    --inputbox "Enter the name of the software or container to install:" 8 40 \
                    3>&1 1>&2 2>&3)
                
                [ -n "$INSTALL_CHOICE" ] && install $INSTALL_CHOICE
                ;;
            5)
                REMOVE_CHOICE=$(dialog --clear --backtitle "Remove Software" \
                    --inputbox "Enter the name of the software to remove:" 8 40 \
                    3>&1 1>&2 2>&3)
                
                [ -n "$REMOVE_CHOICE" ] && remove $REMOVE_CHOICE
                ;;
            6)
                break
                ;;
        esac
    done
}


case "$1" in
    install|i)
        install "$2"
        ;;
    update|u)
        system_update
        ;;
    remove|r)
        remove "$2"
        ;;
    wifi)
        wifi_control "$2"
        ;;
    clean|c)
        system_clean
        ;;
    help|-h|--help)
        show_help
        ;;
    config|dialog)
        lab_config_dialog
        ;;
    *)
        echo "Invalid command. For a list of commands, use 'pilab help'."
        exit 1
esac

exit 0
